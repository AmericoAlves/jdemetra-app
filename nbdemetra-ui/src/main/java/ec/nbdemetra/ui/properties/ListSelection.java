/*
 * Copyright 2013 National Bank of Belgium
 *
 * Licensed under the EUPL, Version 1.1 or â€“ as soon they will be approved 
 * by the European Commission - subsequent versions of the EUPL (the "Licence");
 * You may not use this work except in compliance with the Licence.
 * You may obtain a copy of the Licence at:
 *
 * http://ec.europa.eu/idabc/eupl
 *
 * Unless required by applicable law or agreed to in writing, software 
 * distributed under the Licence is distributed on an "AS IS" basis,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the Licence for the specific language governing permissions and 
 * limitations under the Licence.
 */
package ec.nbdemetra.ui.properties;

import ec.nbdemetra.ui.NbComponents;
import ec.util.various.swing.FontAwesome;
import java.util.ArrayList;
import java.util.Collections;
import java.util.List;
import javax.swing.DefaultListModel;
import javax.swing.JButton;
import javax.swing.ListModel;
import org.openide.awt.MouseUtils;
import org.openide.util.ImageUtilities;

/**
 *
 * @author Jean Palate
 * @param <T>
 * @deprecated use {@link ec.util.list.swing.JListSelection} instead
 */
@Deprecated
public class ListSelection<T> extends javax.swing.JPanel {

    public static final String SEL_CHANGED = "SelectionChanged";

    private final List<T> im = new ArrayList<>();
    private final List<T> sm = new ArrayList<>();

    /**
     * Creates new form ListSelection
     */
    public ListSelection() {
        initComponents();
        withIcon(addButton, FontAwesome.FA_ARROW_CIRCLE_RIGHT);
        withIcon(removeButton, FontAwesome.FA_ARROW_CIRCLE_LEFT);
    }

    private static void withIcon(JButton button, FontAwesome fontAwesome) {
        button.setText("");
        button.setIcon(fontAwesome.getIcon(button.getForeground(), 16f));
        button.setDisabledIcon(ImageUtilities.createDisabledIcon(button.getIcon()));
    }

    private ListModel convert(List<T> list) {
        DefaultListModel model = new DefaultListModel();
        for (T t : list) {
            model.addElement(t);
        }
        return model;
    }

    public List<T> getSelection() {
        return Collections.unmodifiableList(sm);
    }

    public void set(List<T> input) {
        set(input, Collections.<T>emptyList());
    }

    public void set(List<T> input, List<T> sel) {
        im.clear();
        sm.clear();
        im.addAll(input);
        sm.addAll(sel);
        inputList.setModel(convert(im));
        selectionList.setModel(convert(sm));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = NbComponents.newJScrollPane();
        inputList = new javax.swing.JList();
        jPanel1 = new javax.swing.JPanel();
        jToolBar1 = new javax.swing.JToolBar();
        addButton = new javax.swing.JButton();
        removeButton = new javax.swing.JButton();
        jScrollPane2 = NbComponents.newJScrollPane();
        selectionList = new javax.swing.JList();

        setLayout(new javax.swing.BoxLayout(this, javax.swing.BoxLayout.LINE_AXIS));

        jScrollPane1.setPreferredSize(new java.awt.Dimension(200, 138));

        inputList.setMaximumSize(new java.awt.Dimension(80, 120));
        inputList.setMinimumSize(new java.awt.Dimension(80, 120));
        inputList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                inputListMouseClicked(evt);
            }
        });
        inputList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                inputListValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(inputList);

        add(jScrollPane1);

        jPanel1.setMaximumSize(new java.awt.Dimension(50, 32767));
        jPanel1.setMinimumSize(new java.awt.Dimension(50, 33));
        jPanel1.setPreferredSize(new java.awt.Dimension(50, 300));

        jToolBar1.setFloatable(false);
        jToolBar1.setOrientation(javax.swing.SwingConstants.VERTICAL);
        jToolBar1.setRollover(true);

        addButton.setText(org.openide.util.NbBundle.getMessage(ListSelection.class, "ListSelection.addButton.text")); // NOI18N
        addButton.setEnabled(false);
        addButton.setFocusable(false);
        addButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        addButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        addButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addButtonActionPerformed(evt);
            }
        });
        jToolBar1.add(addButton);

        removeButton.setText(org.openide.util.NbBundle.getMessage(ListSelection.class, "ListSelection.removeButton.text")); // NOI18N
        removeButton.setEnabled(false);
        removeButton.setFocusable(false);
        removeButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        removeButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        removeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeButtonActionPerformed(evt);
            }
        });
        jToolBar1.add(removeButton);

        jPanel1.add(jToolBar1);

        add(jPanel1);

        jScrollPane2.setPreferredSize(new java.awt.Dimension(200, 138));

        selectionList.setMinimumSize(new java.awt.Dimension(80, 1203));
        selectionList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                selectionListMouseClicked(evt);
            }
        });
        selectionList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                selectionListValueChanged(evt);
            }
        });
        jScrollPane2.setViewportView(selectionList);

        add(jScrollPane2);
    }// </editor-fold>//GEN-END:initComponents

private void addButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addButtonActionPerformed
    List isel = inputList.getSelectedValuesList();
    im.removeAll(isel);
    sm.addAll(isel);
    inputList.setModel(convert(im));
    selectionList.setModel(convert(sm));
    validate();
    firePropertyChange(SEL_CHANGED, null, getSelection());
}//GEN-LAST:event_addButtonActionPerformed

private void removeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeButtonActionPerformed
    List ssel = selectionList.getSelectedValuesList();
    im.addAll(ssel);
    sm.removeAll(ssel);
    inputList.setModel(convert(im));
    selectionList.setModel(convert(sm));
    validate();
    firePropertyChange(SEL_CHANGED, null, getSelection());
}//GEN-LAST:event_removeButtonActionPerformed

private void inputListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_inputListValueChanged
    addButton.setEnabled(!inputList.isSelectionEmpty());
}//GEN-LAST:event_inputListValueChanged

private void selectionListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_selectionListValueChanged
    removeButton.setEnabled(!selectionList.isSelectionEmpty());
}//GEN-LAST:event_selectionListValueChanged

    private void inputListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_inputListMouseClicked
        if (MouseUtils.isDoubleClick(evt)) {
            addButtonActionPerformed(null);
        }
    }//GEN-LAST:event_inputListMouseClicked

    private void selectionListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_selectionListMouseClicked
        if (MouseUtils.isDoubleClick(evt)) {
            removeButtonActionPerformed(null);
        }
    }//GEN-LAST:event_selectionListMouseClicked

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addButton;
    private javax.swing.JList inputList;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JButton removeButton;
    private javax.swing.JList selectionList;
    // End of variables declaration//GEN-END:variables
}
